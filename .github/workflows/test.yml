name: Test

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
        
      - name: Install Dependencies
        run: |
          pip install poetry
          poetry --version
          poetry config virtualenvs.in-project true
          poetry install -E style --no-root
          
      - name: Static Analysis
        run: poetry run make lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry --version
          poetry config virtualenvs.in-project true
          poetry install -vv
          poetry install -E tests
          poetry install -E torch
          poetry install -E prophet
          poetry install -E wandb
          
      - name: PyTest ("not long")
        run: |
          poetry run pytest tests -v --cov=etna -m "not long" --cov-report=xml
          poetry run pytest etna -v --doctest-modules

      - name: Upload coverage
        uses: codecov/codecov-action@v2

  long-test:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry --version
          poetry config virtualenvs.in-project true
          poetry install -vv
          poetry install -E tests
          poetry install -E torch
          poetry install -E prophet
          poetry install -E wandb

      - name: PyTest ("long")
        run: |
          poetry run pytest tests -v --cov=etna -m "long" --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v2

  notebooks-test:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry --version
          poetry config virtualenvs.in-project true
          poetry install -vv
          poetry install -E release
          poetry install -E jupyter
          poetry install -E torch
          poetry install -E prophet
          poetry install -E wandb
          
      - name: Notebook runner
        run: |
          poetry run python -m scripts.notebook_runner
